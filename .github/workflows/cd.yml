name: CD Pipeline

on:
  workflow_run: 
    workflows: ["CI Pipeline"]
    types: 
     - completed

jobs:

  build:

    runs-on: self-hosted

    steps:
    - name: Pull Docker image
      run: sudo docker pull haileythegooner/klaytn_alert:latest
    - name: Delete old Docker container
      run: sudo docker image prune -f
    - name: Generate Environment Variable File for production  
      run: |
        echo "DISCORD_WEBHOOK_URL=$DISCORD_WEBHOOK_URL" >> .env.production
        echo "DISCORD_APP_ID=$DISCORD_APP_ID" >> .env.production
        echo "DISCORD_PUBLIC_KEY=$DISCORD_PUBLIC_KEY" >> .env.production
        echo "DISCORD_URL=$DISCORD_URL" >> .env.production
        echo "DISCORD_TOKEN=$DISCORD_TOKEN" >> .env.production
        echo "DISCORD_CHANNELID=$DISCORD_CHANNELID" >> .env.production

        echo "wsUrl=$wsUrl" >> .env.production

        echo "APP_KEY=$APP_KEY" >> .env.production
        echo "APP_SECRET=$APP_SECRET" >> .env.production
        echo "BEARER_TOKEN=$BEARER_TOKEN" >> .env.production
        echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> .env.production
        echo "ACCESS_SECRET=$ACCESS_SECRET" >> .env.production
        echo "CLIENT_ID=$CLIENT_ID"  >> .env.production 
        echo "CLIENT_SECRET=$CLIENT_SECRET"  >> .env.production
        
        echo "TELEGRAM_TOKEN=$TELEGRAM_TOKEN" >> .env.production
        echo "NGROK_SEVER_URL=$NGROK_SEVER_URL" >> .env.production
        echo "Threshold=$Threshold" >> .env.production
        echo "Threshold_TEST=$Threshold_TEST" >> .env.production

        echo "DB_URL=$DB_URL" >> .env.production
        echo "COINMARKETCAP=$COINMARKETCAP" >> .env.production
      env:
        wsUrl: ${{secrets.wsUrl}}

        DISCORD_WEBHOOK_URL: ${{secrets.DISCORD_WEBHOOK_URL}}
        DISCORD_APP_ID: ${{secrets.DISCORD_APP_ID}}
        DISCORD_PUBLIC_KEY: ${{secrets.DISCORD_PUBLIC_KEY}}
        DISCORD_URL: ${{secrets.DISCORD_URL}}
        DISCORD_TOKEN: ${{secrets.DISCORD_TOKEN}}
        DISCORD_CHANNELID : ${{secrets.DISCORD_CHANNELID}}

        APP_KEY: ${{secrets.APP_KEY}}
        APP_SECRET: ${{secrets.APP_SECRET}}
        BEARER_TOKEN: ${{secrets.BEARER_TOKEN}}
        ACCESS_TOKEN: ${{secrets.ACCESS_TOKEN}}
        ACCESS_SECRET: ${{secrets.ACCESS_SECRET}}
        CLIENT_ID: ${{secrets.CLIENT_ID}} 
        CLIENT_SECRET: ${{secrets.CLIENT_SECRET}}
        TELEGRAM_TOKEN: ${{secrets.TELEGRAM_TOKEN}}
        NGROK_SEVER_URL: ${{secrets.NGROK_SEVER_URL}}

        Threshold: ${{secrets.Threshold}}
        Threshold_TEST: ${{secrets.Threshold_TEST}}

        DB_URL: ${{secrets.DB_URL}}
        COINMARKETCAP: ${{secrets.COINMARKETCAP}}
     
    - name: Run Docker Container
      env:
        wsUrl: ${{secrets.wsUrl}}

        DISCORD_WEBHOOK_URL: ${{secrets.DISCORD_WEBHOOK_URL}}
        DISCORD_APP_ID: ${{secrets.DISCORD_APP_ID}}
        DISCORD_PUBLIC_KEY: ${{secrets.DISCORD_PUBLIC_KEY}}
        DISCORD_URL: ${{secrets.DISCORD_URL}}
        DISCORD_TOKEN: ${{secrets.DISCORD_TOKEN}}
        DISCORD_CHANNELID: ${{secrets.DISCORD_CHANNELID}}
    
        APP_KEY: ${{secrets.APP_KEY}}
        APP_SECRET: ${{secrets.APP_SECRET}}
        BEARER_TOKEN: ${{secrets.BEARER_TOKEN}}
        ACCESS_TOKEN: ${{secrets.ACCESS_TOKEN}}
        ACCESS_SECRET: ${{secrets.ACCESS_SECRET}}
        CLIENT_ID: ${{secrets.CLIENT_ID}} 
        CLIENT_SECRET: ${{secrets.CLIENT_SECRET}}

        TELEGRAM_TOKEN: ${{secrets.TELEGRAM_TOKEN}}
        NGROK_SEVER_URL: ${{secrets.NGROK_SEVER_URL}}

        Threshold: ${{secrets.Threshold}}
        Threshold_TEST: ${{secrets.Threshold_TEST}}

        DB_URL: ${{secrets.DB_URL}}
        COINMARKETCAP: ${{secrets.COINMARKETCAP}}
    

      run: sudo docker run --env-file ./.env.production -d -p 8080:8080 --name klaytn_alert-container haileythegooner/klaytn_alert
      
